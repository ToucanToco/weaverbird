{
  "exclude": [
    "sql"
  ],
  "step": {
    "pipeline": [
      {
        "name": "uniquegroups",
        "on": [
          "TOTO"
        ]
      }
    ]
  },
  "input": {
    "schema": {
      "fields": [
        {
          "name": "RAICHU",
          "type": "integer"
        },
        {
          "name": "TOTO",
          "type": "string"
        },
        {
          "name": "FLORIZARRE",
          "type": "string"
        }
      ],
      "pandas_version": "0.20.0"
    },
    "data": [
      {
        "TOTO": "dindin",
        "RAICHU": 42,
        "FLORIZARRE": "patate"
      },
      {
        "TOTO": "zigolom",
        "RAICHU": 3,
        "FLORIZARRE": "patate"
      }
    ]
  },
  "other_inputs": {
    "buzz": {
      "schema": {
        "fields": [
          {
            "name": "RAICHU",
            "type": "number"
          },
          {
            "name": "TOTO",
            "type": "string"
          }
        ],
        "pandas_version": "0.20.0"
      },
      "data": [
        {
          "TOTO": "zigolom",
          "RAICHU": 3,
          "FLORIZARRE": "patate"
        },
        {
          "TOTO": "dindin",
          "RAICHU": 42,
          "FLORIZARRE": "patate"
        }
      ]
    }
  },
  "expected": {
    "schema": {
      "fields": [
        {
          "name": "TOTO",
          "type": "string"
        }
      ],
      "pandas_version": "0.20.0"
    },
    "data": [
      {
        "TOTO": "dindin"
      },
      {
        "TOTO": "zigolom"
      }
    ]
<<<<<<< HEAD:server/tests/backends/fixtures_sql/unique/groups.json
=======
  },
  "other_expected": {
    "sql": {
      "query": "WITH SELECT_STEP_0 AS (SELECT * FROM uniquegroups_uniquegroups), UNIQUEGROUPS_STEP_1 AS (SELECT TOTO FROM SELECT_STEP_0 GROUP BY TOTO)  SELECT TOTO FROM UNIQUEGROUPS_STEP_1"
    },
    "snowflake": {
      "query": "WITH SELECT_STEP_0 AS (SELECT * FROM uniquegroups_uniquegroups), UNIQUEGROUPS_STEP_1 AS (SELECT TOTO FROM SELECT_STEP_0 GROUP BY TOTO)  SELECT TOTO FROM UNIQUEGROUPS_STEP_1"
    }
>>>>>>> feat(filter_test): shared method to get all fixtures and test_case (#1030):server/tests/backends/fixtures/uniquegroups/uniquegroups.json
  }
}
