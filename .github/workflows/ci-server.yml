name: CI (server)

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request, only if `server/` files are modified
  push:
    branches:
      - master
    paths:
      - 'server/**'
      - '.github/workflows/ci-server.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'server/**'
      - '.github/workflows/ci-server.yml'

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    defaults:
      run:
        working-directory: server

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      env:
        UV_VERSION: "0.7.6"
      run: |
        curl -LsSf "https://astral.sh/uv/${UV_VERSION}/install.sh" | sh

    - name: Install dependencies
      run: make install

    - name: Lint
      run: make lint

    - name: Test
      env:
        # Snowflake
        SNOWFLAKE_PASSWORD: '${{ secrets.SNOWFLAKE_PASSWORD }}'
        SNOWFLAKE_USER: '${{ secrets.SNOWFLAKE_USER}}'
        SNOWFLAKE_DATABASE: '${{ secrets.SNOWFLAKE_DATABASE}}'
        SNOWFLAKE_ACCOUNT: '${{ secrets.SNOWFLAKE_ACCOUNT}}'
        SNOWFLAKE_SCHEMA: '${{ secrets.SNOWFLAKE_SCHEMA}}'
        SNOWFLAKE_WAREHOUSE: '${{ secrets.SNOWFLAKE_WAREHOUSE}}'
        # Redshift
        REDSHIFT_USER: '${{ secrets.REDSHIFT_USER }}'
        REDSHIFT_PASSWORD: '${{ secrets.REDSHIFT_PASSWORD }}'
        REDSHIFT_HOST: '${{ secrets.REDSHIFT_HOST }}'
        REDSHIFT_DATABASE: '${{ secrets.REDSHIFT_DATABASE }}'
        # Athena
        ATHENA_OUTPUT: '${{ secrets.ATHENA_OUTPUT }}'
        ATHENA_DATABASE: '${{ secrets.ATHENA_DATABASE }}'
        ATHENA_ACCESS_KEY_ID: '${{ secrets.ATHENA_ACCESS_KEY_ID }}'
        ATHENA_SECRET_ACCESS_KEY: '${{ secrets.ATHENA_SECRET_ACCESS_KEY }}'
        ATHENA_REGION: '${{ secrets.ATHENA_REGION }}'
        # GBQ
        GOOGLE_BIG_QUERY_CREDENTIALS: '${{ secrets.GOOGLE_BIG_QUERY_CREDENTIALS }}'
      run: make test && make test-serial
      timeout-minutes: 25
